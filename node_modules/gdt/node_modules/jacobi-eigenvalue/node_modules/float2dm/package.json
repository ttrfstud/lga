{
  "name": "float2dm",
  "version": "0.0.1",
  "description": "2d matrix of floats",
  "main": "index.js",
  "devDependencies": {
    "taptap": "0.0.3"
  },
  "readme": "float2dm\n=============\nit is two-dimensional matrix with floating-point numbers. the only exported method is constructor, its signature is _(rows, cols, dp)_, where \"rows\" and \"cols\" are self-explanatory and \"dp\" stands for \"double precision\", and \"dp\" is optional (defaults to falsy).\n\nit uses buffer inside.\n\nyou can .get value from it, like this:\n```javascript\nvar matrix = require('float2dm');\n\nvar m = new matrix(2, 3, true);\n\nm.get(1, 2) // <-- it is m[1][2]\n```\n\nyou can .set values to it, like this:\n```javascript\nvar matrix = require('float2dm');\n\nvar m = new matrix(2, 3, true);\n\nm.set(1, 2, 3.1) // <-- it is m[1][2] = 3.1\n```\n\nyou can .tr (transpose) it, like this:\n\n```javascript\nvar matrix = require('float2dm');\n\nvar mt;\nvar m = new matrix(2, 3);\n\nm.set(1, 2, 3.2);\nm.set(2, 1, 3.3);\n\nmt = m.tr();\n\nconsole.log(mt.get(2, 1));\nconsole.log(mt.get(1, 2));\n\n// first prints: 3.2\n// then prints: 3.3\n```\n\ntranspose and matrix itself are different views over the same buffer. they internally reference the elements of underlying buffer a bit differently.\n\nthe buffer and internal state of matrix will not be initialized until you call .tr or .get or .set on it.\n\nalso feel free to get values of .rows and .cols attributes of float2dm matrix.\n\nplease check your args before invoking it!\n\n\nack\n========\nit is of course inspired by [ndarrays](https://github.com/mikolalysenko/ndarray/).\n\n",
  "readmeFilename": "README.md",
  "_id": "float2dm@0.0.1",
  "_from": "float2dm@0.0.1"
}
